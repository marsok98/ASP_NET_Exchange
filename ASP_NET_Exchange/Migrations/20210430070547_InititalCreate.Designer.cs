// <auto-generated />
using ASP_NET_Exchange.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASP_NET_Exchange.Migrations
{
    [DbContext(typeof(ASP_NET_ExchangeContext))]
    [Migration("20210430070547_InititalCreate")]
    partial class InititalCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASP_NET_Exchange.SingleCurrencyExchange", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("amountToExchange")
                        .HasColumnType("int");

                    b.Property<double>("exchangeRate")
                        .HasColumnType("float");

                    b.Property<string>("nameOfCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("resultOfCalculating")
                        .HasColumnType("float");

                    b.Property<int>("timeStamp")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("SingleCurrencyExchange");
                });
#pragma warning restore 612, 618
        }
    }
}
